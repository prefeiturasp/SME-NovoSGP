version: "3.1"

volumes:
  postgres-data: {}

services:
  sme-api:
    container_name: sme-api
    restart: on-failure
    image: sme-api
    build:
      context: .
      dockerfile: ./src/SME.SGP.Api/Dockerfile
    ports:
      - "8080:80"
      - "5001:80"
    restart: on-failure
    networks:
      - sme-network
    depends_on:
      # - "sme-db"
      - "sme-redis"
      - "sme-rabbitmq"
    env_file:
      - sme-api.env
  sme-workerservice:
    container_name: sme-workerservice
    restart: on-failure
    image: sme-workerservice
    build:
      context: .
      dockerfile: ./src/SME.SGP.WorkerService/Dockerfile
    ports:
      - "5000:5000"
    networks:
      - sme-network
    depends_on:
      - "sme-db"
      - "sme-redis"
      - "sme-api"
    env_file:
      - sme-api.env
  sme-db:
    container_name: sme-db
    restart: always
    image: postgres:11-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sgp_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sme-network
  sme-redis:
    image: redis:5.0.5-alpine
    container_name: sme-redis
    ports:
      - "6379:6379"
    networks:
      - sme-network
  sme-flyway:
    container_name: sme-flyway
    image: boxfuse/flyway:5.2.4
    command: -url=jdbc:postgresql://sme-db:5432/sgp_db?user=postgres&password=postgres -locations='filesystem:/opt/scripts' -outOfOrder=true migrate
    volumes:
      - ./scripts:/opt/scripts
    depends_on:
      - "sme-db"
      - "sme-rabbitmq"
    networks:
      - sme-network
  sme-rabbitmq:
    container_name: sme-rabbitmq
    image: rabbitmq:3.7-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=bitnami
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - sme-network

networks:
  sme-network:
    driver: bridge
    
