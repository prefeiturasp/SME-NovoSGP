version: "3.1"

volumes:
  scripts: {}

services:
  sme-postgres:
    container_name: sme-postgres-testes
    restart: always
    build: 
      context: .
      dockerfile: teste/ponta-a-ponta/scripts/postgres/Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
        - ./teste/ponta-a-ponta/scripts/postgres/init:/docker-entrypoint-initdb.d/
        - scripts:/opt/scripts
    networks:
      - sme-network
  sme-flyway:
    container_name: sme-flyway-testes
    restart: on-failure:5 
    image: boxfuse/flyway:5.2.4
    command: -url=jdbc:postgresql://sme-postgres-testes:5432/sgp_db?user=postgres&password=postgres -locations='filesystem:/opt/scripts' -baselineOnMigrate=true -outOfOrder=true migrate
    volumes:
      - scripts:/opt/scripts
    depends_on:
      - sme-postgres
    networks:
      - sme-network  
  # mssql-db:
  #   container_name: mssql-db-testes
  #   restart: always
  #   image: mcr.microsoft.com/mssql/server:2017-latest
  #   environment:
  #     ACCEPT_EULA: Y
  #     SA_PASSWORD: SME@2021
  #     MSSQL_PID: Developer
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #       - ./mssql:/scripts/ 
  #   command:
  #     - /bin/bash
  #     - -c 
  #     - |
  #       # Launch MSSQL and send to background
  #       /opt/mssql/bin/sqlservr &
  #       # Wait 30 seconds for it to be available
  #       # (lame, I know, but there's no nc available to start prodding network ports)
  #       sleep 30
  #       # Run every script in /scripts
  #       # TODO set a flag so that this is only done once on creation, 
  #       #      and not every time the container runs
  #       for foo in /scripts/*.sql
  #         do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
  #       done
  #       # So that the container doesn't shut down, sleep this thread
  #       sleep infinity
      
networks:
  sme-network:
    driver: bridge
    name: sme_external_network
