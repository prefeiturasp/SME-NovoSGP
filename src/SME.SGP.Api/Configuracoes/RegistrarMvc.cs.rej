diff a/src/SME.SGP.Api/Configuracoes/RegistrarMvc.cs b/src/SME.SGP.Api/Configuracoes/RegistrarMvc.cs	(rejected hunks)
@@ -4,35 +4,37 @@ using Microsoft.AspNetCore.Mvc;
 using Microsoft.Extensions.DependencyInjection;
 using SME.SGP.Api.Filtros;
 using SME.SGP.Api.Middlewares;
-using SME.SGP.Infra;
-using System.Text.Json.Serialization;
 
+//namespace SME.SGP.Api.Configuracoes
 namespace SME.SGP.Api
 {
     public static class RegistrarMvc
     {
         public static void Registrar(IServiceCollection services)
         {
-            var serviceProvider = services.BuildServiceProvider();
 
+
+
+            
             services.Configure<ApiBehaviorOptions>(options =>
             {
                 options.SuppressModelStateInvalidFilter = true;
             });
 
-            var conexao = serviceProvider.GetService<ISgpContext>();
-            var mediator = serviceProvider.GetService<IMediator>();
-
             services.AddMvc(options =>
-            {
-                options.EnableEndpointRouting = true;
-                options.Filters.Add(new ValidaDtoAttribute());
-                options.Filters.Add(new FiltroExcecoesAttribute(mediator));
-                options.Filters.Add(new DisposeConnectionFilter(conexao));
-            })
+                {
+                    options.EnableEndpointRouting = true;
+                    options.Filters.Add<ValidaDtoAttribute>();
+                    options.Filters.Add<FiltroExcecoesAttribute>();
+                    //nao entendi esse filtro, ele recebou uma conexao fixa que sempre vai estar closed depois 
+                    //da primeira execucao ? Nao esta errada essa declaracao nao se for usar DI nao ?  
+                    options.Filters.Add<DisposeConnectionFilter>();
+                    //consulta deveria ter um filtro tambem pra encerrar a conexao ? 
+                    options.Filters.Add<DisposeConnectionFilterConsulta>();
+                })
                 .AddNewtonsoftJson()
                 .AddFluentValidation()
-                .SetCompatibilityVersion(CompatibilityVersion.Version_2_2);
+                .SetCompatibilityVersion(CompatibilityVersion.Version_3_0);
         }
     }
 }
\ No newline at end of file
